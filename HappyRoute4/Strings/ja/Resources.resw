<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddButton.Content" xml:space="preserve">
    <value>追加</value>
    <comment>Добавить</comment>
  </data>
  <data name="AddLines.Content" xml:space="preserve">
    <value>行の追加</value>
    <comment>Добавить линии</comment>
  </data>
  <data name="AlineNames.Content" xml:space="preserve">
    <value>名を揃える</value>
    <comment>Выровнять названия</comment>
  </data>
  <data name="ApbAlign.Text" xml:space="preserve">
    <value>整列</value>
    <comment>Ровнять</comment>
  </data>
  <data name="ApbCopy.Text" xml:space="preserve">
    <value>コピー</value>
    <comment>Копировать</comment>
  </data>
  <data name="ApbCreate.Text" xml:space="preserve">
    <value>作成する</value>
    <comment>Создавать</comment>
  </data>
  <data name="ApbDelete.Text" xml:space="preserve">
    <value>削除</value>
    <comment>Удалить</comment>
  </data>
  <data name="ApbDiscardChanges.Text" xml:space="preserve">
    <value>変更の破棄</value>
    <comment>Discard changes</comment>
  </data>
  <data name="ApbExport.Text" xml:space="preserve">
    <value>エクスポート</value>
    <comment>Экспорт</comment>
  </data>
  <data name="ApbImport.Text" xml:space="preserve">
    <value>インポート</value>
    <comment>Импорт</comment>
  </data>
  <data name="ApbMove.Text" xml:space="preserve">
    <value>移動</value>
    <comment>Move</comment>
  </data>
  <data name="ApbNew.Text" xml:space="preserve">
    <value>新しい</value>
    <comment>New</comment>
  </data>
  <data name="ApbRename.Text" xml:space="preserve">
    <value>名前の変更</value>
    <comment>Переименовать</comment>
  </data>
  <data name="ApbShowLines.Text" xml:space="preserve">
    <value>行</value>
    <comment>Линии</comment>
  </data>
  <data name="Autors.Text" xml:space="preserve">
    <value>作成者</value>
    <comment>Авторы</comment>
  </data>
  <data name="Cancel.Content" xml:space="preserve">
    <value>キャンセル</value>
    <comment>Cancel</comment>
  </data>
  <data name="CatalogMyName" xml:space="preserve">
    <value>個人用</value>
  </data>
  <data name="CatalogSamplesName" xml:space="preserve">
    <value>サンプル</value>
  </data>
  <data name="CatalogSchemeStart" xml:space="preserve">
    <value>開始</value>
    <comment>Начать</comment>
  </data>
  <data name="CatalogStart" xml:space="preserve">
    <value>開始</value>
    <comment>Старт</comment>
  </data>
  <data name="Clear.Content" xml:space="preserve">
    <value>クリーン</value>
    <comment>Очистить</comment>
  </data>
  <data name="DeploymentPlan.Text" xml:space="preserve">
    <value>位置</value>
    <comment>План размещения</comment>
  </data>
  <data name="DeploymentPlanCircle.Content" xml:space="preserve">
    <value>丸</value>
    <comment>По кругу</comment>
  </data>
  <data name="ErrorFileVimoDelete" xml:space="preserve">
    <value>ファイルを削除できません。</value>
    <comment>Не могу удалить файл</comment>
  </data>
  <data name="ErrorFileVimoExport" xml:space="preserve">
    <value>ファイルをエクスポートすることができません。</value>
    <comment>Не могу экспортировать файл</comment>
  </data>
  <data name="ErrorFileVimoImport" xml:space="preserve">
    <value>ファイルをインポートできません。</value>
    <comment>Не могу импортировать файл</comment>
  </data>
  <data name="ErrorFileVimoRename" xml:space="preserve">
    <value>ファイルの名前を変更できません。</value>
    <comment>Не могу переименовать файл</comment>
  </data>
  <data name="ErrorReadFiles" xml:space="preserve">
    <value>ファイルの一覧を読み取り中にエラーが発生しました。</value>
  </data>
  <data name="FileExist.Text" xml:space="preserve">
    <value>この名前のファイルが既に存在します。</value>
    <comment>Файл с таким именем уже есть</comment>
  </data>
  <data name="FileName.Text" xml:space="preserve">
    <value>ファイル名</value>
    <comment>Имя файла</comment>
  </data>
  <data name="FileVimoCopyTitle" xml:space="preserve">
    <value>コピー</value>
    <comment>Сделать копию</comment>
  </data>
  <data name="FileVimoCopyTitleAction" xml:space="preserve">
    <value>コピー</value>
    <comment>Копировать</comment>
  </data>
  <data name="FileVimoCopyToMyTitle" xml:space="preserve">
    <value>編集のサンプルのコピーを作成します。</value>
    <comment>Сделать свою копию образца для правки</comment>
  </data>
  <data name="FileVimoCopyToMyTitleAction" xml:space="preserve">
    <value>コピー</value>
    <comment>Копировать</comment>
  </data>
  <data name="FileVimoDeleteTitle" xml:space="preserve">
    <value>全体のスキームを削除しますか。</value>
    <comment>Удалить всю схему?</comment>
  </data>
  <data name="FileVimoDeleteTitleAction" xml:space="preserve">
    <value>削除</value>
    <comment>Удалить</comment>
  </data>
  <data name="FileVimoExportTitle" xml:space="preserve">
    <value>エクスポート</value>
    <comment>Экспорт</comment>
  </data>
  <data name="FileVimoexportTitleAction" xml:space="preserve">
    <value>としてを保存.</value>
    <comment>Сохранить как...</comment>
  </data>
  <data name="FileVimoImportTitle" xml:space="preserve">
    <value>インポート</value>
    <comment>Импорт</comment>
  </data>
  <data name="FileVimoImportTitleAction" xml:space="preserve">
    <value>アップロード.</value>
    <comment>Загрузить из...</comment>
  </data>
  <data name="FileVimoNewTitle" xml:space="preserve">
    <value>空を作成します。</value>
    <comment>Создать пустую</comment>
  </data>
  <data name="FileVimoNewTitleAction" xml:space="preserve">
    <value>作成する</value>
    <comment>Создать</comment>
  </data>
  <data name="FileVimoRenameTitle" xml:space="preserve">
    <value>名前の変更</value>
    <comment>Переименовать</comment>
  </data>
  <data name="FileVimoRenameTitleAction" xml:space="preserve">
    <value>名前の変更</value>
    <comment>Переименовать</comment>
  </data>
  <data name="LinePropAddStations" xml:space="preserve">
    <value>駅を追加します。</value>
  </data>
  <data name="LinePropColor" xml:space="preserve">
    <value>カラー</value>
    <comment>Цвет</comment>
  </data>
  <data name="LinePropNames" xml:space="preserve">
    <value>名</value>
    <comment>Наименования</comment>
  </data>
  <data name="LinePropRemove" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="MapPropZoom" xml:space="preserve">
    <value>ズーム</value>
  </data>
  <data name="MapVimoOpenError" xml:space="preserve">
    <value>ファイルを開くことができません。</value>
  </data>
  <data name="MapVimoSaveError" xml:space="preserve">
    <value>ファイルを保存できません</value>
  </data>
  <data name="Name1.Text" xml:space="preserve">
    <value>名</value>
    <comment>Наименование</comment>
  </data>
  <data name="Name2.Text" xml:space="preserve">
    <value>ネイティブの名前</value>
    <comment>Наименование родное</comment>
  </data>
  <data name="ParamCoSegment.Header" xml:space="preserve">
    <value>セグメントの係数</value>
    <comment>Коеффициент отрезка</comment>
  </data>
  <data name="ParamCoStation.Header" xml:space="preserve">
    <value>駅の係数</value>
    <comment>Коеффициент станции</comment>
  </data>
  <data name="ParamFontSize.Header" xml:space="preserve">
    <value>テキスト フォント</value>
    <comment>Шрифт текста</comment>
  </data>
  <data name="ParamIndent.Header" xml:space="preserve">
    <value>レベルを下げる</value>
    <comment>Отступ</comment>
  </data>
  <data name="ParamIndentSegment.Header" xml:space="preserve">
    <value>セグメントのインデント</value>
    <comment>Отступ отрезка</comment>
  </data>
  <data name="ParamNumberNames.Header" xml:space="preserve">
    <value>名前の数</value>
    <comment>Количество наименований</comment>
  </data>
  <data name="ParamPropBackgroundColor" xml:space="preserve">
    <value>背景</value>
    <comment>Фон</comment>
  </data>
  <data name="ParamPropBuildColor" xml:space="preserve">
    <value>作り付け</value>
    <comment>Построенный</comment>
  </data>
  <data name="ParamPropColors" xml:space="preserve">
    <value>色</value>
    <comment>Цвета</comment>
  </data>
  <data name="ParamPropDimedColor" xml:space="preserve">
    <value>非アクティブ</value>
    <comment>Неактивный</comment>
  </data>
  <data name="ParamPropNames" xml:space="preserve">
    <value>名</value>
    <comment>Наименования</comment>
  </data>
  <data name="ParamPropThick" xml:space="preserve">
    <value>オプション</value>
    <comment>Параметры</comment>
  </data>
  <data name="ParamPropTransferColor" xml:space="preserve">
    <value>転送</value>
    <comment>Пересадка</comment>
  </data>
  <data name="ParamRadius.Header" xml:space="preserve">
    <value>駅の半径</value>
    <comment>Радиус станции</comment>
  </data>
  <data name="ParamTextIndent.Header" xml:space="preserve">
    <value>テキストのインデント</value>
    <comment>Отступ текста</comment>
  </data>
  <data name="ParamThick.Header" xml:space="preserve">
    <value>厚み</value>
    <comment>Толщина</comment>
  </data>
  <data name="ParamThickSegment.Header" xml:space="preserve">
    <value>セグメントの厚さ</value>
    <comment>Толщина отрезка</comment>
  </data>
  <data name="ParamTransferWeight.Header" xml:space="preserve">
    <value>移行の難しさ</value>
    <comment>Трудность перехода</comment>
  </data>
  <data name="ParamWeightSegment.Header" xml:space="preserve">
    <value>セグメントの重量</value>
    <comment>Вес отрезка</comment>
  </data>
  <data name="PasteLines.Text" xml:space="preserve">
    <value>ライン (Name1/Name2) の名前を挿入します。</value>
    <comment>Вставьте названия линий (имя1/имя2)</comment>
  </data>
  <data name="PasteStations.Text" xml:space="preserve">
    <value>駅 (Name1/Name2) の名前を挿入します。</value>
    <comment>Вставьте названия станций (имя1/имя2)</comment>
  </data>
  <data name="Remove.Content" xml:space="preserve">
    <value>削除</value>
    <comment>Удалить</comment>
  </data>
  <data name="RemoveLine.Content" xml:space="preserve">
    <value>行全体を削除します。</value>
    <comment>Удалить всю линию</comment>
  </data>
  <data name="RemoveLineStations.Content" xml:space="preserve">
    <value>すべてのステーションのみを削除します。</value>
  </data>
  <data name="RemoveStation.Content" xml:space="preserve">
    <value>駅を削除します。</value>
    <comment>Удалить станцию</comment>
  </data>
  <data name="RotateNames.Text" xml:space="preserve">
    <value>回転名</value>
    <comment>Повернуть названия</comment>
  </data>
  <data name="RouteVariantHappy.Content" xml:space="preserve">
    <value>ハッピー</value>
    <comment>Счастливый</comment>
  </data>
  <data name="RouteVariantHelpHappy.Text" xml:space="preserve">
    <value>出発駅を選択して、どの駅のあなたの幸せを見つける見つけます。</value>
    <comment>выберите станцию отправления и узнайте, на какой станции вас сейчас ждёт ваше счастье.</comment>
  </data>
  <data name="RouteVariantHelpHappyTitle.Text" xml:space="preserve">
    <value>ハッピー</value>
    <comment>Счастливый</comment>
  </data>
  <data name="RouteVariantHelpOptimal.Text" xml:space="preserve">
    <value>あなたの出発地と目的地の駅を選択してそれらの間の最適ルートを見つけます。</value>
    <comment>выбрав станции отправления и назначения, вы увидите оптимальный маршрут между ними.</comment>
  </data>
  <data name="RouteVariantHelpOptimalLine.Text" xml:space="preserve">
    <value>だけでなく、駅を選択するだけでなく、局の目的の行を指定するのにがあります。</value>
    <comment>вам придётся не только выбирать станции, но и указывать желаемые линии для станций пересадок.</comment>
  </data>
  <data name="RouteVariantHelpOptimalLineTitle.Text" xml:space="preserve">
    <value>選択ラインに最適</value>
    <comment>Оптимальный с выбором линии</comment>
  </data>
  <data name="RouteVariantHelpOptimalTitle.Text" xml:space="preserve">
    <value>最適</value>
    <comment>Оптимальный</comment>
  </data>
  <data name="RouteVariantHelpSmartmob.Text" xml:space="preserve">
    <value>あなたの宝くじを密封、駅で一緒になります。幸せなルートをドライブ!それに比例して分割可能なポットに参加します。</value>
    <comment>Соберитесь у станции, опечатайте ваши лотерейные билеты. Проедьте счастливым маршрутом! Возможный джекпот разделите пропорционально участию.</comment>
  </data>
  <data name="RouteVariantHelpTitleSmartmob.Text" xml:space="preserve">
    <value>スマートモブ</value>
    <comment>Смартмоб</comment>
  </data>
  <data name="RouteVariantOptimal.Content" xml:space="preserve">
    <value>最適</value>
    <comment>Оптимальный</comment>
  </data>
  <data name="RouteVariantOptimalLine.Text" xml:space="preserve">
    <value>最適</value>
    <comment>Оптимальный</comment>
  </data>
  <data name="RouteVariantOptimalLineLine.Text" xml:space="preserve">
    <value>行の選択</value>
    <comment>с выбором линии</comment>
  </data>
  <data name="RouteVariantTitle.Text" xml:space="preserve">
    <value>ルート オプション</value>
    <comment>Вариант маршрута</comment>
  </data>
  <data name="RouteWeight.Text" xml:space="preserve">
    <value>ルート全体の重量</value>
    <comment>Вес маршрута всего</comment>
  </data>
  <data name="SegmentPropLine" xml:space="preserve">
    <value>線</value>
    <comment>Линия</comment>
  </data>
  <data name="SegmentPropParam" xml:space="preserve">
    <value>オプション</value>
    <comment>Параметры</comment>
  </data>
  <data name="StationPropNames" xml:space="preserve">
    <value>名</value>
    <comment>Наименования</comment>
  </data>
  <data name="StationPropParam" xml:space="preserve">
    <value>オプション</value>
    <comment>Параметры</comment>
  </data>
  <data name="MenuCharacters.Text" xml:space="preserve">
    <value>文字数</value>
  </data>
  <data name="MenuEdit.Text" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="MenuFile.Text" xml:space="preserve">
    <value>ファイル</value>
  </data>
  <data name="MenuPin.Text" xml:space="preserve">
    <value>ピン タイル</value>
  </data>
  <data name="MenuSettings.Text" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="MenuShowCatalog.Text" xml:space="preserve">
    <value>カタログを表示します。</value>
  </data>
  <data name="MenuShowRoute.Text" xml:space="preserve">
    <value>ルートを表示します。</value>
  </data>
  <data name="MenuUnpin.Text" xml:space="preserve">
    <value>タイルの固定を解除します。</value>
  </data>
  <data name="MenuClearSelection.Text" xml:space="preserve">
    <value>選択のクリア</value>
  </data>
  <data name="MenuZoom.Text" xml:space="preserve">
    <value>ズーム</value>
  </data>
  <data name="MenuEditOff.Text" xml:space="preserve">
    <value>セーブ</value>
  </data>
</root>